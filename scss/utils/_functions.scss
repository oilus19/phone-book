//
// map-fetch($map, $keys)
//
// An easy way to fetch a deep value in a multi-level map. Works much like
// map-get() except that you pass multiple keys as the second parameter to
// go down multiple levels in the nested map.
//

@function map-fetch($map, $keys) {
  $key: nth($keys, 1);
  $length: length($keys);
  $value: map-get($map, $key);
  @if ($length > 1) {
    $rest: ();
    @for $i from 2 through $length {
      $rest: append($rest, nth($keys, $i))
    }
    @return map-fetch($value, $rest)
  } @else {
    @return $value;
  }
}


//
// em($pixels, $context)
// 
// Convert pixel to em
// 

$browser-context: 18; // Default
@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}


//
// rem($target)
// 
// Convert pixel to rem
// 

$base-font-size: 10;
@function rem($target) {
  @return ($target / $base-font-size) * 1rem;
}


// rgba-to-rgb($rgba, $background)
// 
// Convert an RGBA color to its RGB look-alike
// 
@function rgba-to-rgb($rgba, $background: #fff) {
  @return mix(rgb(red($rgba), green($rgba), blue($rgba)), $background, alpha($rgba) * 100%);
}